name: Run Cypress Tests and Deploy to Azure

on:
  push:
    branches:
      - test2
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.9.0'

    - name: Cache Cypress binary
      uses: actions/cache@v3
      with:
        path: ~/.cache/Cypress
        key: cypress-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          cypress-${{ runner.os }}-

    - name: Install dependencies
      run: npm install

    - name: Fix permissions for binaries
      run: chmod +x ./node_modules/.bin/*

    - name: Install Cypress binary
      run: npx cypress install

    - name: Debug environment variables
      run: env

    - name: Run backend tests 
      run: npx nyc --nycrc-path .nycrc-backend mocha
      
    - name: Instrument frontend files 
      run: |
        mkdir -p instrumented
        cp -r public/* instrumented/
        npx nyc instrument public instrumented
        
    - name: Run frontend tests 
      run: |
        if [ -d ".nyc_output" ]; then rm -rf .nyc_output; fi
        npx nyc --nycrc-path .nycrc-frontend cypress run
      continue-on-error: true

    - name: Ensure screenshots folder exists
      run: mkdir -p cypress/screenshots/

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-test-results
        path: cypress/screenshots/

    - name: Upload coverage report
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          coverage/
          .nyc_output/

  build-and-push:
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images
        run: |
          docker compose build
          docker compose push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group rmsResourceGroup --name rmsAKSCluster

    - name: Verify kubectl context
      run: |
        kubectl config current-context 

    - name: Deploy to AKS using kubectl
      run: |
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml
